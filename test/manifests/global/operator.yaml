apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: kmsvaultsecrets.k8s.patoarvizu.dev
spec:
  group: k8s.patoarvizu.dev
  names:
    kind: KMSVaultSecret
    listKind: KMSVaultSecretList
    plural: kmsvaultsecrets
    singular: kmsvaultsecret
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            includeSecrets:
              items:
                type: string
              type: array
            kvSettings:
              properties:
                casIndex:
                  format: int64
                  minimum: 0
                  type: integer
                engineVersion:
                  enum:
                  - v1
                  - v2
                  type: string
              required:
              - engineVersion
              type: object
            path:
              type: string
            secretContext:
              additionalProperties:
                type: string
              type: object
            secrets:
              items:
                properties:
                  emptySecret:
                    type: boolean
                  encryptedSecret:
                    type: string
                  key:
                    type: string
                  secretContext:
                    additionalProperties:
                      type: string
                    type: object
                required:
                - key
                type: object
              type: array
          required:
          - path
          - secrets
          - kvSettings
          type: object
        status:
          properties:
            created:
              type: boolean
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true

---

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: partialkmsvaultsecrets.k8s.patoarvizu.dev
spec:
  group: k8s.patoarvizu.dev
  names:
    kind: PartialKMSVaultSecret
    listKind: PartialKMSVaultSecretList
    plural: partialkmsvaultsecrets
    singular: partialkmsvaultsecret
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            secretContext:
              additionalProperties:
                type: string
              type: object
            secrets:
              items:
                properties:
                  emptySecret:
                    type: boolean
                  encryptedSecret:
                    type: string
                  key:
                    type: string
                  secretContext:
                    additionalProperties:
                      type: string
                    type: object
                required:
                - key
                type: object
              type: array
          required:
          - secrets
          type: object
        status:
          properties:
            created:
              type: boolean
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kms-vault-operator
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      name: kms-vault-operator
  template:
    metadata:
      labels:
        name: kms-vault-operator
    spec:
      serviceAccountName: kms-vault-operator
      containers:
        - name: kms-vault-operator
          # Replace this with the built image name
          image: patoarvizu/kms-vault-operator:latest
          imagePullPolicy: IfNotPresent
          command:
          - kms-vault-operator
          - --vault-authentication-method=k8s
          env:
            - name: WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPERATOR_NAME
              value: "kms-vault-operator"
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-secrets
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-secrets
                  key: AWS_SECRET_ACCESS_KEY
            - name: AWS_REGION
              value: us-east-1
            - name: VAULT_ADDR
              value: "https://vault:8200"
            - name: VAULT_SKIP_VERIFY
              value: "true"
            - name: VAULT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: vault-unseal-keys
                  key: vault-root

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: kms-vault-operator

---

kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kms-vault-operator
subjects:
- kind: ServiceAccount
  name: kms-vault-operator
roleRef:
  kind: Role
  name: kms-vault-operator
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kms-vault-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - endpoints
  - persistentvolumeclaims
  - events
  - configmaps
  - secrets
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - apps
  resources:
  - deployments
  - daemonsets
  - replicasets
  - statefulsets
  verbs:
  - '*'
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - get
  - create
- apiGroups:
  - apps
  resourceNames:
  - kms-vault-operator
  resources:
  - deployments/finalizers
  verbs:
  - update
- apiGroups:
  - k8s.patoarvizu.dev
  resources:
  - '*'
  - kmsvaultsecrets
  verbs:
  - '*'
